// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integ snapshot validation 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956ArtifactHashD15A2D11": Object {
      "Description": "Artifact hash for asset \\"4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956\\"",
      "Type": "String",
    },
    "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3Bucket72B03BC9": Object {
      "Description": "S3 bucket for asset \\"4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956\\"",
      "Type": "String",
    },
    "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554": Object {
      "Description": "S3 key for asset version \\"4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3Bucket72B03BC9",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287LogRetentionCE72797A": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GithubSyncedAccessPointTaskTaskRole5E4974C8",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GithubSyncedAccessPointTaskExecutionRole13A48554",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GithubSyncedAccessPointPrivateTaskTaskRole48037F4F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GithubSyncedAccessPointPrivateTaskExecutionRole111828C2",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3SyncedAccessPointTaskTaskRole2F9E75A5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "S3SyncedAccessPointTaskExecutionRole383B6F08",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateSecurityGroupGithubSyncedAccessPointPrivateTaskF6B4B2BE": Object {
      "Properties": Object {
        "GroupDescription": "testing-stack/FargateSecurityGroupGithubSyncedAccessPointPrivateTask",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateSecurityGroupGithubSyncedAccessPointTask79ECF76A": Object {
      "Properties": Object {
        "GroupDescription": "testing-stack/FargateSecurityGroupGithubSyncedAccessPointTask",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FargateSecurityGroupS3SyncedAccessPointTaskC6453C2A": Object {
      "Properties": Object {
        "GroupDescription": "testing-stack/FargateSecurityGroupS3SyncedAccessPointTask",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Filesystem653F8FD3": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "FileSystemTags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Filesystem",
          },
        ],
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Delete",
    },
    "FilesystemEfsMountTarget1FA5225C0": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "Filesystem653F8FD3",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "FilesystemEfsSecurityGroup6D2E3511",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "FilesystemEfsMountTarget29F807637": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "Filesystem653F8FD3",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "FilesystemEfsSecurityGroup6D2E3511",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "FilesystemEfsSecurityGroup6D2E3511": Object {
      "Properties": Object {
        "GroupDescription": "testing-stack/Filesystem/EfsSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Filesystem",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FilesystemEfsSecurityGroupfromtestingstackFargateSecurityGroupGithubSyncedAccessPointPrivateTask4D32A6342049C0669476": Object {
      "Properties": Object {
        "Description": "from testingstackFargateSecurityGroupGithubSyncedAccessPointPrivateTask4D32A634:2049",
        "FromPort": 2049,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FilesystemEfsSecurityGroup6D2E3511",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "FargateSecurityGroupGithubSyncedAccessPointPrivateTaskF6B4B2BE",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FilesystemEfsSecurityGroupfromtestingstackFargateSecurityGroupGithubSyncedAccessPointTask2FC6EA6F2049763EB5F3": Object {
      "Properties": Object {
        "Description": "from testingstackFargateSecurityGroupGithubSyncedAccessPointTask2FC6EA6F:2049",
        "FromPort": 2049,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FilesystemEfsSecurityGroup6D2E3511",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "FargateSecurityGroupGithubSyncedAccessPointTask79ECF76A",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FilesystemEfsSecurityGroupfromtestingstackFargateSecurityGroupS3SyncedAccessPointTaskC7D1F81B20496CF98737": Object {
      "Properties": Object {
        "Description": "from testingstackFargateSecurityGroupS3SyncedAccessPointTaskC7D1F81B:2049",
        "FromPort": 2049,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "FilesystemEfsSecurityGroup6D2E3511",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "FargateSecurityGroupS3SyncedAccessPointTaskC6453C2A",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GithubSyncedAccessPoint7D9E7A52": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "Filesystem653F8FD3",
        },
        "PosixUser": Object {
          "Gid": "1001",
          "Uid": "1001",
        },
        "RootDirectory": Object {
          "CreationInfo": Object {
            "OwnerGid": "1001",
            "OwnerUid": "1001",
            "Permissions": "0755",
          },
          "Path": "/demo-github",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "GithubSyncedAccessPointClusterEF173EE3": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "GithubSyncedAccessPointPrivateC1B0BF58": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "Filesystem653F8FD3",
        },
        "PosixUser": Object {
          "Gid": "1001",
          "Uid": "1001",
        },
        "RootDirectory": Object {
          "CreationInfo": Object {
            "OwnerGid": "1001",
            "OwnerUid": "1001",
            "Permissions": "0755",
          },
          "Path": "/demo-github-private",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "GithubSyncedAccessPointPrivateClusterAE91288B": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "GithubSyncedAccessPointPrivateSyncTriggerEcsRunTaskC2FFC4EA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FilesystemEfsMountTarget1FA5225C0",
        "FilesystemEfsMountTarget29F807637",
        "GithubSyncedAccessPointPrivateSyncTriggerEcsRunTaskCustomResourcePolicy2E574E9C",
      ],
      "Properties": Object {
        "Create": Object {
          "action": "runTask",
          "parameters": Object {
            "cluster": Object {
              "Ref": "GithubSyncedAccessPointPrivateClusterAE91288B",
            },
            "launchType": "FARGATE",
            "networkConfiguration": Object {
              "awsvpcConfiguration": Object {
                "assignPublicIp": "DISABLED",
                "securityGroups": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "FargateSecurityGroupGithubSyncedAccessPointPrivateTaskF6B4B2BE",
                      "GroupId",
                    ],
                  },
                ],
                "subnets": Array [
                  Object {
                    "Ref": "VpcPrivateSubnet1Subnet536B997A",
                  },
                  Object {
                    "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
                  },
                ],
              },
            },
            "platformVersion": "1.4.0",
            "taskDefinition": Object {
              "Ref": "GithubSyncedAccessPointPrivateTask0ADA2724",
            },
          },
          "physicalResourceId": Object {
            "id": Object {
              "Ref": "GithubSyncedAccessPointPrivateTask0ADA2724",
            },
          },
          "service": "ECS",
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "GithubSyncedAccessPointPrivateSyncTriggerEcsRunTaskCustomResourcePolicy2E574E9C": Object {
      "DependsOn": Array [
        "FilesystemEfsMountTarget1FA5225C0",
        "FilesystemEfsMountTarget29F807637",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GithubSyncedAccessPointPrivateTask0ADA2724",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GithubSyncedAccessPointPrivateSyncTriggerEcsRunTaskCustomResourcePolicy2E574E9C",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GithubSyncedAccessPointPrivateTask0ADA2724": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Command": Array [
              "/root/githubsync.sh",
            ],
            "Environment": Array [
              Object {
                "Name": "REPOSITORY_URI",
                "Value": "https://github.com/pahud/private-repo.git",
              },
              Object {
                "Name": "MOUNT_TARGET",
                "Value": "/mnt/efsmount",
              },
              Object {
                "Name": "SYNC_PATH",
                "Value": "/private-repo",
              },
              Object {
                "Name": "GITHUB_SECRET_ID",
                "Value": "github",
              },
              Object {
                "Name": "GITHUB_SECRET_KEY",
                "Value": "oauth_token",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:5fe415ce859ed19c6eff39b5b9146d7743f0c3ff1f376cdd5f6109e1568ac710",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "LogGroupGithubSyncedAccessPointPrivateTaskB8A3E024",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "SyncWorker",
              },
            },
            "MountPoints": Array [
              Object {
                "ContainerPath": "/mnt/efsmount",
                "ReadOnly": false,
                "SourceVolume": "efs-data",
              },
            ],
            "Name": "SyncWorker",
            "Secrets": Array [
              Object {
                "Name": "OAUTH_TOKEN",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:github:oauth_token::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "GithubSyncedAccessPointPrivateTaskExecutionRole111828C2",
            "Arn",
          ],
        },
        "Family": "testingstackGithubSyncedAccessPointPrivateTask392756D6",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "GithubSyncedAccessPointPrivateTaskTaskRole48037F4F",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "EfsVolumeConfiguration": Object {
              "FileSystemId": Object {
                "Ref": "Filesystem653F8FD3",
              },
            },
            "Name": "efs-data",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "GithubSyncedAccessPointPrivateTaskExecutionRole111828C2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GithubSyncedAccessPointPrivateTaskExecutionRoleDefaultPolicyEC8D5406": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LogGroupGithubSyncedAccessPointPrivateTaskB8A3E024",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":secret:github-??????",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "elasticfilesystem:ClientMount",
                "elasticfilesystem:ClientWrite",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":elasticfilesystem:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":file-system/",
                    Object {
                      "Ref": "Filesystem653F8FD3",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GithubSyncedAccessPointPrivateTaskExecutionRoleDefaultPolicyEC8D5406",
        "Roles": Array [
          Object {
            "Ref": "GithubSyncedAccessPointPrivateTaskExecutionRole111828C2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GithubSyncedAccessPointPrivateTaskTaskRole48037F4F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GithubSyncedAccessPointPrivateTaskTaskRoleDefaultPolicy0AD6FFA4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":secret:github-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GithubSyncedAccessPointPrivateTaskTaskRoleDefaultPolicy0AD6FFA4",
        "Roles": Array [
          Object {
            "Ref": "GithubSyncedAccessPointPrivateTaskTaskRole48037F4F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GithubSyncedAccessPointSyncTriggerEcsRunTask547FB319": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FilesystemEfsMountTarget1FA5225C0",
        "FilesystemEfsMountTarget29F807637",
        "GithubSyncedAccessPointSyncTriggerEcsRunTaskCustomResourcePolicy10FECB9C",
      ],
      "Properties": Object {
        "Create": Object {
          "action": "runTask",
          "parameters": Object {
            "cluster": Object {
              "Ref": "GithubSyncedAccessPointClusterEF173EE3",
            },
            "launchType": "FARGATE",
            "networkConfiguration": Object {
              "awsvpcConfiguration": Object {
                "assignPublicIp": "DISABLED",
                "securityGroups": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "FargateSecurityGroupGithubSyncedAccessPointTask79ECF76A",
                      "GroupId",
                    ],
                  },
                ],
                "subnets": Array [
                  Object {
                    "Ref": "VpcPrivateSubnet1Subnet536B997A",
                  },
                  Object {
                    "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
                  },
                ],
              },
            },
            "platformVersion": "1.4.0",
            "taskDefinition": Object {
              "Ref": "GithubSyncedAccessPointTask940232B1",
            },
          },
          "physicalResourceId": Object {
            "id": Object {
              "Ref": "GithubSyncedAccessPointTask940232B1",
            },
          },
          "service": "ECS",
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "GithubSyncedAccessPointSyncTriggerEcsRunTaskCustomResourcePolicy10FECB9C": Object {
      "DependsOn": Array [
        "FilesystemEfsMountTarget1FA5225C0",
        "FilesystemEfsMountTarget29F807637",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "GithubSyncedAccessPointTask940232B1",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GithubSyncedAccessPointSyncTriggerEcsRunTaskCustomResourcePolicy10FECB9C",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GithubSyncedAccessPointTask940232B1": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Command": Array [
              "/root/githubsync.sh",
            ],
            "Environment": Array [
              Object {
                "Name": "REPOSITORY_URI",
                "Value": "https://github.com/pahud/cdk-efs-assets.git",
              },
              Object {
                "Name": "MOUNT_TARGET",
                "Value": "/mnt/efsmount",
              },
              Object {
                "Name": "SYNC_PATH",
                "Value": "/cdk-efs-assets",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:5fe415ce859ed19c6eff39b5b9146d7743f0c3ff1f376cdd5f6109e1568ac710",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "LogGroupGithubSyncedAccessPointTaskEDF28D95",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "SyncWorker",
              },
            },
            "MountPoints": Array [
              Object {
                "ContainerPath": "/mnt/efsmount",
                "ReadOnly": false,
                "SourceVolume": "efs-data",
              },
            ],
            "Name": "SyncWorker",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "GithubSyncedAccessPointTaskExecutionRole13A48554",
            "Arn",
          ],
        },
        "Family": "testingstackGithubSyncedAccessPointTask342F540E",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "GithubSyncedAccessPointTaskTaskRole5E4974C8",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "EfsVolumeConfiguration": Object {
              "FileSystemId": Object {
                "Ref": "Filesystem653F8FD3",
              },
            },
            "Name": "efs-data",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "GithubSyncedAccessPointTaskExecutionRole13A48554": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GithubSyncedAccessPointTaskExecutionRoleDefaultPolicyE3EA5DE8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LogGroupGithubSyncedAccessPointTaskEDF28D95",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "elasticfilesystem:ClientMount",
                "elasticfilesystem:ClientWrite",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":elasticfilesystem:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":file-system/",
                    Object {
                      "Ref": "Filesystem653F8FD3",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GithubSyncedAccessPointTaskExecutionRoleDefaultPolicyE3EA5DE8",
        "Roles": Array [
          Object {
            "Ref": "GithubSyncedAccessPointTaskExecutionRole13A48554",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GithubSyncedAccessPointTaskTaskRole5E4974C8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "LogGroupGithubSyncedAccessPointPrivateTaskB8A3E024": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "LogGroupGithubSyncedAccessPointTaskEDF28D95": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "LogGroupS3SyncedAccessPointTaskA3E69ADB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "S3SyncedAccessPointClusterDB88111B": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "S3SyncedAccessPointFF91B6A5": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "Filesystem653F8FD3",
        },
        "PosixUser": Object {
          "Gid": "1001",
          "Uid": "1001",
        },
        "RootDirectory": Object {
          "CreationInfo": Object {
            "OwnerGid": "1001",
            "OwnerUid": "1001",
            "Permissions": "0755",
          },
          "Path": "/demo-s3-archive",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "S3SyncedAccessPointSyncTriggerEcsRunTaskB8480867": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FilesystemEfsMountTarget1FA5225C0",
        "FilesystemEfsMountTarget29F807637",
        "S3SyncedAccessPointSyncTriggerEcsRunTaskCustomResourcePolicyE7643430",
      ],
      "Properties": Object {
        "Create": Object {
          "action": "runTask",
          "parameters": Object {
            "cluster": Object {
              "Ref": "S3SyncedAccessPointClusterDB88111B",
            },
            "launchType": "FARGATE",
            "networkConfiguration": Object {
              "awsvpcConfiguration": Object {
                "assignPublicIp": "DISABLED",
                "securityGroups": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "FargateSecurityGroupS3SyncedAccessPointTaskC6453C2A",
                      "GroupId",
                    ],
                  },
                ],
                "subnets": Array [
                  Object {
                    "Ref": "VpcPrivateSubnet1Subnet536B997A",
                  },
                  Object {
                    "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
                  },
                ],
              },
            },
            "platformVersion": "1.4.0",
            "taskDefinition": Object {
              "Ref": "S3SyncedAccessPointTask304D2573",
            },
          },
          "physicalResourceId": Object {
            "id": Object {
              "Ref": "S3SyncedAccessPointTask304D2573",
            },
          },
          "service": "ECS",
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "S3SyncedAccessPointSyncTriggerEcsRunTaskCustomResourcePolicyE7643430": Object {
      "DependsOn": Array [
        "FilesystemEfsMountTarget1FA5225C0",
        "FilesystemEfsMountTarget29F807637",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "S3SyncedAccessPointTask304D2573",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3SyncedAccessPointSyncTriggerEcsRunTaskCustomResourcePolicyE7643430",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "S3SyncedAccessPointTask304D2573": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Command": Array [
              "/root/s3sync.sh",
            ],
            "Environment": Array [
              Object {
                "Name": "MOUNT_TARGET",
                "Value": "/mnt/efsmount",
              },
              Object {
                "Name": "BUCKET_NAME",
                "Value": "mock",
              },
              Object {
                "Name": "ZIPPED_KEY",
                "Value": "folder/foo.zip",
              },
              Object {
                "Name": "SYNC_PATH",
                "Value": "/foo",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:5fe415ce859ed19c6eff39b5b9146d7743f0c3ff1f376cdd5f6109e1568ac710",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "LogGroupS3SyncedAccessPointTaskA3E69ADB",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "SyncWorker",
              },
            },
            "MountPoints": Array [
              Object {
                "ContainerPath": "/mnt/efsmount",
                "ReadOnly": false,
                "SourceVolume": "efs-data",
              },
            ],
            "Name": "SyncWorker",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "S3SyncedAccessPointTaskExecutionRole383B6F08",
            "Arn",
          ],
        },
        "Family": "testingstackS3SyncedAccessPointTask66627B69",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "S3SyncedAccessPointTaskTaskRole2F9E75A5",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "EfsVolumeConfiguration": Object {
              "FileSystemId": Object {
                "Ref": "Filesystem653F8FD3",
              },
            },
            "Name": "efs-data",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "S3SyncedAccessPointTaskExecutionRole383B6F08": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "S3SyncedAccessPointTaskExecutionRoleDefaultPolicyD655E908": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "LogGroupS3SyncedAccessPointTaskA3E69ADB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "elasticfilesystem:ClientMount",
                "elasticfilesystem:ClientWrite",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":elasticfilesystem:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":file-system/",
                    Object {
                      "Ref": "Filesystem653F8FD3",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3SyncedAccessPointTaskExecutionRoleDefaultPolicyD655E908",
        "Roles": Array [
          Object {
            "Ref": "S3SyncedAccessPointTaskExecutionRole383B6F08",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "S3SyncedAccessPointTaskTaskRole2F9E75A5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "S3SyncedAccessPointTaskTaskRoleDefaultPolicy14AD9D62": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::mock/folder/foo.zip",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "S3SyncedAccessPointTaskTaskRoleDefaultPolicy14AD9D62",
        "Roles": Array [
          Object {
            "Ref": "S3SyncedAccessPointTaskTaskRole2F9E75A5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "testing-stack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;
